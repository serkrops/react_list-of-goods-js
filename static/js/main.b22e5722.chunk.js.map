{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY_VALUE","SORT_BY_LENGTH_VALUE","REVERSE_DEFAULT_VALUE","App","useState","sortSelect","setSortSelect","reverseSelect","setReverseSelect","sortedGoods","goods","sortKey","reverse","tempGoods","sort","goodA","goodB","localeCompare","length","getGoodsSorted","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,sBAC5BC,EAAuB,iBAGvBC,GAAwB,EAyBvB,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAASF,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEMC,EA3BR,SAAwBC,EAAOC,EAASC,GACtC,IAAMC,EAAS,YAAOH,GAiBtB,MAfgB,KAAZC,GACFE,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQL,GACN,KAAKX,EACH,OAAOe,EAAME,cAAcD,GAE7B,KAAKf,EACH,OAAOc,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKPN,IAAYV,EAChBW,EAAUD,UACVC,EAOgBM,CAClBpB,EAAiBM,EAAYE,GAG/B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAeL,IAE7BuB,QAAS,WACPjB,EAAcN,IANlB,SASGA,IAGH,wBACEqB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAeJ,IAE7BsB,QAAS,WACPjB,EAAcL,IANlB,SASGA,IAGH,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAkBL,IAEhCqB,QAAS,WACPf,GAAkBD,IANtB,SA7Dc,aAyEZF,GAAcE,IACd,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAc,IACdE,EAAiBN,IALrB,SA3EU,aAyFd,6BACGO,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b22e5722.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY_VALUE = 'Sort alphabetically';\nconst SORT_BY_LENGTH_VALUE = 'Sort by length';\nconst RESET_VALUE = 'Reset';\nconst REVERSE_VALUE = 'Reverse';\nconst REVERSE_DEFAULT_VALUE = false;\n\nfunction getGoodsSorted(goods, sortKey, reverse) {\n  const tempGoods = [...goods];\n\n  if (sortKey !== '') {\n    tempGoods.sort((goodA, goodB) => {\n      switch (sortKey) {\n        case SORT_ALPHABETICALLY_VALUE:\n          return goodA.localeCompare(goodB);\n\n        case SORT_BY_LENGTH_VALUE:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return (reverse !== REVERSE_DEFAULT_VALUE\n    ? tempGoods.reverse()\n    : tempGoods);\n}\n\nexport const App = () => {\n  const [sortSelect, setSortSelect] = useState('');\n  const [reverseSelect, setReverseSelect] = useState(REVERSE_DEFAULT_VALUE);\n\n  const sortedGoods = getGoodsSorted(\n    goodsFromServer, sortSelect, reverseSelect,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortSelect !== SORT_ALPHABETICALLY_VALUE,\n          })}\n          onClick={() => {\n            setSortSelect(SORT_ALPHABETICALLY_VALUE);\n          }}\n        >\n          {SORT_ALPHABETICALLY_VALUE}\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortSelect !== SORT_BY_LENGTH_VALUE,\n          })}\n          onClick={() => {\n            setSortSelect(SORT_BY_LENGTH_VALUE);\n          }}\n        >\n          {SORT_BY_LENGTH_VALUE}\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': reverseSelect === REVERSE_DEFAULT_VALUE,\n          })}\n          onClick={() => {\n            setReverseSelect(!reverseSelect);\n          }}\n        >\n          {REVERSE_VALUE}\n        </button>\n\n        {(sortSelect || reverseSelect) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortSelect('');\n              setReverseSelect(REVERSE_DEFAULT_VALUE);\n            }}\n          >\n            {RESET_VALUE}\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}